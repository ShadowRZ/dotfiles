### SPDX-License-Identifier: MIT -*- Sh -*-

# Zinit module.
module_path+=( "$HOME/.zinit/bin/zmodules/Src" )
zmodload zdharma/zplugin
# Set up $ZDOTDIR.
export ZDOTDIR="${HOME}/.zsh"

PS1=

# Options

# History related options.
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FIND_NO_DUPS
setopt HIST_REDUCE_BLANKS
setopt EXTENDED_HISTORY
setopt HIST_FCNTL_LOCK
# Completion related options.
setopt ALWAYS_TO_END
setopt AUTO_MENU
unsetopt MENU_COMPLETE
# Navigation related options.
setopt PUSHD_MINUS
setopt AUTO_CD
setopt AUTO_PUSHD
# Globbing related options.
setopt EXTENDED_GLOB
setopt NOMATCH
# I/O related options.
setopt NO_CLOBBER
setopt INTERACTIVE_COMMENTS
setopt RC_QUOTES
setopt CORRECT
unsetopt FLOW_CONTROL
# Remove any RPROMPT after executing command.
setopt TRANSIENT_RPROMPT
# Prompt.
setopt PROMPT_SUBST

HISTFILE=~/.zsh_history
HISTSIZE=35000
SAVEHIST="$HISTSIZE"

bindkey -e

export EDITOR="nvim"
export VISUAL=$EDITOR
export PAGER=less

# VTE
if [ $VTE_VERSION ]; then
    source /etc/profile.d/vte.sh
fi

alias edit="$EDITOR"
alias vim=nvim

# Quote URL.
# Please note, both url-quote-magic and bracketed-paste-url-magic are loaded.

# https://archive.zhimingwang.org/blog/2015-09-21-zsh-51-and-bracketed-paste.html
autoload -Uz bracketed-paste-url-magic
zle -N bracketed-paste bracketed-paste-url-magic

# Modified from https://github.com/lilydjwg/dotzsh/blob/master/zshrc
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic
# Original name: toogle-uqm
function self-insert-switch-url-quote-magic () {
    if zle -l self-insert; then
        zle -A .self-insert self-insert && zle -M "=> Disabled url-quote-magic"
    else
        zle -N self-insert url-quote-magic && zle -M "=> Enabled url-quote-magic"
    fi
}
zle -N self-insert-switch-url-quote-magic
bindkey '^X$' self-insert-switch-url-quote-magic

# zinit.
# https://github.com/zdharma/zinit

# Load Zinit if cloned.
if [[ -f "$HOME/.zinit/bin/zinit.zsh" ]]; then
    source "$HOME/.zinit/bin/zinit.zsh"
else
    function zinit () { return 1 }
    function zsh-defer () { return 1 }
    function Zinit-Install () {
        # https://mywiki.wooledge.org/BashFAQ/081
        whence -p git >/dev/null || { print -P "%B%F{red}!! Git was NOT FOUND :(%f%b" >&2 && return 1 }
        [[ -d "$HOME/.zinit" ]] || command mkdir -p "$HOME/.zinit"
        command git clone https://github.com/zdharma/zinit.git ~/.zinit/bin
        print -P "%B%F{green}=> Zinit was installed ! :) Installing plugins...%f%b"
        exec zsh
    }
    print -P "%B%F{yellow}=> Zinit is not installed. Install with \`Zinit-Install'%f%b" >&2
fi

zinit light romkatv/zsh-defer

# Basic LS_COLORS
[[ -n $DISPLAY || -n $ANDROID_ROOT ]] || eval "$(dircolors -b)"

# Extended LS_COLORS
zsh-defer zinit atclone"dircolors -b LS_COLORS > c.zsh" atpull'%atclone' pick"c.zsh" nocompile'!' if'[[ -n $DISPLAY || -n $ANDROID_ROOT ]]' light-mode for trapd00r/LS_COLORS

# Multi-word history search.
zstyle ":plugin:history-search-multi-word" reset-prompt-protect 1

# Snippets / Plugins.
zsh-defer zinit light-mode for \
    OMZ::plugins/git/git.plugin.zsh \
    OMZ::plugins/command-not-found/command-not-found.plugin.zsh \
    OMZ::plugins/hitokoto/hitokoto.plugin.zsh \
    MichaelAquilina/zsh-you-should-use \
    zsh-users/zsh-history-substring-search \
    zdharma/history-search-multi-word \
    voronkovich/gitignore.plugin.zsh \
    blockf atpull'zinit creinstall -q .' zsh-users/zsh-completions \
    atload"zicompinit; zicdreplay" zdharma/fast-syntax-highlighting \
    atload"_zsh_autosuggest_start" zsh-users/zsh-autosuggestions \
    atload"zle redisplay" denysdovhan/spaceship-prompt

# Colored man pages and more.
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# Spaceship
SPACESHIP_PROMPT_ADD_NEWLINE=false
SPACESHIP_CHAR_SYMBOL='$ '
SPACESHIP_CHAR_SYMBOL_ROOT='# '
SPACESHIP_USER_SHOW=needed
SPACESHIP_DIR_LOCK_SYMBOL=' [RO]'
SPACESHIP_EXIT_CODE_SHOW=true
SPACESHIP_EXIT_CODE_SYMBOL=''

# You should use
YSU_MESSAGE_POSITION="after"
YSU_IGNORED_ALIASES=("zi" "zin" "zini" "zpl" "zplg" "g" "vim")

# Others
autoload -Uz zmv
autoload -Uz zargs
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^x^e' edit-command-line

# Help
unalias run-help
autoload -Uz run-help
alias help=run-help

autoload -Uz run-help-git
autoload -Uz run-help-ip
autoload -Uz run-help-openssl
autoload -Uz run-help-p4
autoload -Uz run-help-sudo
autoload -Uz run-help-svk
autoload -Uz run-help-svn

# Terminal Title
autoload -Uz add-zsh-hook

function set-xterm-terminal-title () {
    printf '\e]2;%s\a' "$@"
}

function precmd-set-terminal-title () {
    set-xterm-terminal-title "${(%):-"%n@%m: %~"}"
}

function preexec-set-terminal-title () {
    set-xterm-terminal-title "${(%):-"%n@%m: "}$2"
}

if [[ "$TERM" == (screen*|xterm*|rxvt*|tmux*|putty*|konsole*|gnome*) ]]; then
    add-zsh-hook -Uz precmd precmd-set-terminal-title
    add-zsh-hook -Uz preexec preexec-set-terminal-title
fi

zsh-defer source "${ZDOTDIR}/terminal.zsh"
zsh-defer source "${ZDOTDIR}/completion.zsh"

if [[ -r /proc/mdstat ]]; then
    alias mdstat='cat /proc/mdstat'
fi

alias ...='cd ../../'

# From Prezto.

# BSD ls colors.
export LSCOLORS='exfxcxdxbxGxDxabagacad'

alias ls='command ls --color=auto'
alias l='ls -1A'         # Lists in one column, hidden files.
alias ll='ls -lh'        # Lists human readable sizes.
alias lr='ll -R'         # Lists human readable sizes, recursively.
alias la='ll -A'         # Lists human readable sizes, hidden files.
alias lm='la | "$PAGER"' # Lists human readable sizes, hidden files through pager.
alias lx='ll -XB'        # Lists sorted by extension (GNU only).
alias lk='ll -Sr'        # Lists sorted by size, largest last.
alias lt='ll -tr'        # Lists sorted by date, most recent last.
alias lc='lt -c'         # Lists sorted by date, most recent last, shows change time.
alias lu='lt -u'         # Lists sorted by date, most recent last, shows access time.

# Grep colors.
export GREP_COLOR='37;45'           # BSD.
export GREP_COLORS="mt=$GREP_COLOR" # GNU.

alias grep="${aliases[grep]:-grep} --color=auto"

# Load user config.
if [[ -f ~/.zshrc.local ]]; then
    source ~/.zshrc.local
fi

# vim:ft=zsh:ts=4:sw=4
